// Generated by CoffeeScript 1.8.0

/*!
* jQuery POP'n SocialButton v0.1.9
*
* http://github.com/ktty1220/jquery.popn-socialbutton
*
* å‚è€ƒã‚µã‚¤ãƒˆ
*
* - http://q.hatena.ne.jp/1320898356
* - http://stackoverflow.com/questions/5699270/how-to-get-share-counts-using-graph-api
* - http://stackoverflow.com/questions/8853342/how-to-get-google-1-count-for-current-page-in-php
* - http://hail2u.net/blog/coding/jquery-query-yql-plugin.html
* - http://hail2u.net/blog/coding/jquery-query-yql-plugin-supports-open-data-tables.html
* - http://www.absolute-keitarou.net/blog/?p=1068
*
* Copyright (c) 2013 ktty1220 ktty1220@gmail.com
* Licensed under the MIT license
 */

(function() {
  (function(jQuery) {
    'use strict';
    var $;
    $ = jQuery;
    return $.fn.popnSocialButton = function(services, options) {
      var exOptions, iconSize, idx, mkYQL, popnUp, sName, scheme, servicesProp, _addLink, _i, _len;
      if (options == null) {
        options = {};
      }
      exOptions = $.extend({}, {
        url: document.location.href,
        text: $('title').html(),
        buttonSpace: 24,
        countPosition: {t
          top: 32,
          right: -12
        },
        countColor: {
          text: '#ffffff',
          bg: '#cc0000',
          textHover: '#ffffff',
          bgHover: '#ff6666',
          border: '#ffffff'
        },
        countSize: 11,
        popupWindow: {
          width: 640,
          height: 480
        }
      }, options);
      exOptions.urlOrg = exOptions.url;
      exOptions.url = encodeURIComponent(exOptions.urlOrg);
      exOptions.text = encodeURIComponent(exOptions.text);
      iconSize = 44;
      popnUp = 4;
      scheme = /https/.test(document.location.protocol) ? 'https' : 'http';
      mkYQL = function(url, wantJson) {
        var yUrl;
        if (wantJson == null) {
          wantJson = false;
        }
        yUrl = "" + scheme + "://query.yahooapis.com/v1/public/yql?env=http://datatables.org/alltables.env&q=" + (encodeURIComponent("SELECT content FROM data.headers WHERE url='" + url + "' and ua='Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 5.1)'"));
        if (wantJson) {
          yUrl += '&format=json';
        }
        return yUrl;
      };
      servicesProp = {
        twitter: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/twitter_2x.png',
          alt: 'Twitter Share Button',
          shareUrl: "https://twitter.com/share?url=" + exOptions.url + "&text=" + exOptions.text,
          commentUrl: "https://twitter.com/search/?q=" + exOptions.url,
          countUrl: "http://urls.api.twitter.com/1/urls/count.json?url=" + exOptions.url,
          jsonpFunc: function(json, cb) {
            var _ref;
            return cb((_ref = json.count) != null ? _ref : 0);
          }
        },
        facebook: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/facebook_2x.png',
          alt: 'Facebook Share Button',
          shareUrl: "https://www.facebook.com/sharer.php?u=" + exOptions.url + "&t=" + exOptions.text,
          countUrl: "https://graph.facebook.com/" + exOptions.url,
          jsonpFunc: function(json, cb) {

            /*
            * - Graph APIã§sharesãŒå–å¾—ã§ããªã„å ´åˆã¯FQLã§total_countã‚’å–å¾—ã™ã‚‹
            * - Graph APIã®likes + FQLã®total_countã§ã„ã„ã­ãƒœã‚¿ãƒ³ã¨åŒã˜ä»¶æ•°ã«ãªã‚‹æ¨¡æ§˜(ã„ãã¤ã‹ã®ã‚±ãƒ¼ã‚¹ã‚’èª¿ã¹ãŸçµæžœ)
            * - ã»ã¨ã‚“ã©ã®ã‚µã‚¤ãƒˆã§ã¯FQLã®total_countã ã‘ã§ã„ã„ã­ãƒœã‚¿ãƒ³ã¨åŒã˜ä»¶æ•°ã«ãªã‚‹
             */
            var graphLikes, _ref;
            if (json.shares != null) {
              return cb(json.shares);
            }
            graphLikes = (_ref = json.likes) != null ? _ref : 0;
            return $.ajax({
              url: "https://graph.facebook.com/fql?q=" + (encodeURIComponent("SELECT total_count FROM link_stat WHERE url='" + exOptions.urlOrg + "'")),
              dataType: 'jsonp'
            }).done(function(json) {
              var fqlTotal, _ref1, _ref2;
              fqlTotal = (_ref1 = (_ref2 = json.data[0]) != null ? _ref2.total_count : void 0) != null ? _ref1 : 0;
              return cb(graphLikes + fqlTotal);
            });
          }
        },
        hatebu: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/hatena_bookmark_2x.png',
          alt: 'Hatena Bookmark Share Button',
          shareUrl: "http://b.hatena.ne.jp/add?mode=confirm&url=" + exOptions.url + "&title=" + exOptions.text + "&mode=confirm",
          commentUrl: "http://b.hatena.ne.jp/entry/" + exOptions.urlOrg,
          countUrl: "http://api.b.st-hatena.com/entry.count?url=" + exOptions.url,
          jsonpFunc: function(json, cb) {
            return cb(json != null ? json : 0);
          }
        },
        gplus: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/google+1_2x.png',
          alt: 'Google Plus Share Button',
          shareUrl: "https://plusone.google.com/share?url=" + exOptions.url,

          /*
          * - Google+1ãƒœã‚¿ãƒ³ã¯ã‚·ã‚§ã‚¢æ•°ã«é–¢ã™ã‚‹jsonpã‚’æä¾›ã—ã¦ã„ãªã„(jsonã™ã‚‰æä¾›ã—ã¦ã„ãªã„)ã®ã§+1ãƒœã‚¿ãƒ³ã®htmlã‚’å–å¾—ã—ã¦ãã®ä¸­ã‹ã‚‰ä»¶æ•°ã‚’å–å¾—ã™ã‚‹
          * - ã‚¯ãƒ­ã‚¹ãƒ‰ãƒ¡ã‚¤ãƒ³ã«ã‚ˆã‚‹å–å¾—ã«ãªã‚‹ã®ã§YQLã‚’ä½¿ç”¨ã™ã‚‹
          * - ãŸã ã—googleã®ã‚µãƒ¼ãƒãƒ¼ã«è¨­ç½®ã—ã¦ã‚ã‚‹robots.txtã¯YQL(ã¨ã„ã†ã‹Yahooã®ãƒ­ãƒœãƒƒãƒˆå…¨èˆ¬ï¼Ÿ)ã®UAã‚’æ‹’å¦ã™ã‚‹ã®ã§Open Data Tableã®data.headerãƒ—ãƒ©ã‚°ã‚¤ãƒ³ã‚’ä½¿ç”¨ã™ã‚‹
           */
          countUrl: mkYQL("https://plusone.google.com/_/+1/fastbutton?hl=ja&url=" + exOptions.urlOrg),
          jsonpFunc: function(json, cb) {
            var count, m, _ref;
            count = 0;
            if (((_ref = json.query) != null ? _ref.count : void 0) > 0) {
              m = json.results[0].match(/window\.__SSR = {c: ([\d]+)/);
              if (m != null) {
                count = m[1];
              }
            }
            return cb(count);
          }
        },
        pocket: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/pocket_2x.png',
          alt: 'Pocket Stock Button',
          shareUrl: "https://getpocket.com/save?url=" + exOptions.url + "&title=" + exOptions.text,

          /*
          * Google+1ãƒœã‚¿ãƒ³ã¨åŒæ§˜ã«YQLã§ã‚«ã‚¦ãƒ³ãƒˆã‚’å–å¾—ã™ã‚‹
           */
          countUrl: mkYQL("https://widgets.getpocket.com/v1/button?label=pocket&count=vertical&align=left&v=1&url=" + exOptions.urlOrg + "&src=" + exOptions.urlOrg + "&r=" + (Math.random() * 100000000)),
          jsonpFunc: function(json, cb) {
            var count, m, _ref;
            count = 0;
            if (((_ref = json.query) != null ? _ref.count : void 0) > 0) {
              m = json.results[0].match(/em id="cnt"&gt;(\d+)&lt;/);
              if (m != null) {
                count = m[1];
              }
            }
            return cb(count);
          }
        },
        feedly: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/feedly_2x.png',
          alt: 'Feedly Follow Button',
          shareUrl: "https://feedly.com/index.html#subscription%2Ffeed%2F" + exOptions.feedUrl,

          /*
          * Google+1ãƒœã‚¿ãƒ³ã¨åŒæ§˜ã«YQLã§ã‚«ã‚¦ãƒ³ãƒˆã‚’å–å¾—ã™ã‚‹
           */
          countUrl: mkYQL("https://cloud.feedly.com/v3/feeds/feed%2F" + (encodeURIComponent(exOptions.feedUrl)), true),
          jsonpFunc: function(json, cb) {
            var _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
            return cb((_ref = json != null ? (_ref1 = json.query) != null ? (_ref2 = _ref1.results) != null ? (_ref3 = _ref2.resources) != null ? (_ref4 = _ref3.content) != null ? (_ref5 = _ref4.json) != null ? _ref5.subscribers : void 0 : void 0 : void 0 : void 0 : void 0 : void 0) != null ? _ref : 0);
          }
        },
        github: {
          img: 'http://www.jqueryscript.net/demo/jQuery-Plugin-For-Custom-Social-Buttons-with-Share-Counts-POP-SocialButton/img/github_alt_2x.png',
          alt: 'GitHub Repository',
          shareUrl: "https://github.com/" + exOptions.githubRepo,
          commentUrl: "https://github.com/" + exOptions.githubRepo + "/stargazers",
          countUrl: "https://api.github.com/repos/" + exOptions.githubRepo,
          jsonpFunc: function(json, cb) {
            var _ref, _ref1;
            return cb((_ref = json != null ? (_ref1 = json.data) != null ? _ref1.watchers : void 0 : void 0) != null ? _ref : 0);
          }
        }
      };
      _addLink = (function(_this) {
        return function(name, prop, idx) {
          var countTag, countTagType, imgTag, shareTag, wrapTag;
          wrapTag = $('<div/>').attr({
            "class": "popn-socialbutton-wrap " + name
          }).css({
            'float': 'left',
            position: 'relative',
            width: iconSize,
            height: iconSize,
            marginTop: popnUp
          });
          if (idx > 0) {
            wrapTag.css({
              marginLeft: exOptions.buttonSpace
            });
          }
          shareTag = $('<a/>').attr({
            href: prop.shareUrl,
            "class": 'popn-socialbutton-share',
            target: '_blank'
          }).css({
            outline: 'none',
            display: 'block',
            width: '100%',
            height: '100%'
          });
          imgTag = $('<img/>').attr({
            src: "" + exOptions.imgDir + "/" + prop.img,
            alt: prop.alt
          }).css({
            border: 'none'
          });
          countTagType = prop.commentUrl ? 'a' : 'span';
          countTag = $("<" + countTagType + "/>").attr({
            "class": 'popn-socialbutton-count'
          });
          if (countTagType === 'a') {
            countTag.attr({
              href: prop.commentUrl,
              target: '_blank'
            });
          } else {
            countTag.css({
              cursor: 'default'
            });
          }
          countTag.css($.extend({}, {
            display: 'none',
            position: 'absolute',
            color: exOptions.countColor.text,
            backgroundColor: exOptions.countColor.bg,
            border: "solid 2px " + exOptions.countColor.border,
            fontSize: exOptions.countSize,
            textDecoration: 'none',
            outline: 'none',
            fontWeight: 'bold',
            padding: '0 4px',
            borderRadius: 6,
            boxShadow: '0 1px 2px rgba(0, 0, 0, 0.8)',
            zIndex: 1
          }, exOptions.countPosition));
          wrapTag.append(shareTag.append(imgTag)).append(countTag);
          $(_this).append(wrapTag);
          return $.ajax({
            url: prop.countUrl,
            dataType: 'jsonp'
          }).done(function(json) {
            return prop.jsonpFunc(json, function(count) {
              return countTag.show().text(count);
            });
          });
        };
      })(this);
      for (idx = _i = 0, _len = services.length; _i < _len; idx = ++_i) {
        sName = services[idx];
        if (servicesProp[sName] != null) {
          _addLink(sName, servicesProp[sName], idx);
        }
      }
      $(this).height(iconSize + popnUp);
      $(this).find('.popn-socialbutton-share').click(function() {
        var left, top;
        if (/(github|feedly)/.test($(this).parent().attr('class'))) {
          return true;
        }
        top = (screen.height / 2) - (exOptions.popupWindow.height / 2);
        left = (screen.width / 2) - (exOptions.popupWindow.width / 2);
        window.open(this.href, '', "width=" + exOptions.popupWindow.width + ", height=" + exOptions.popupWindow.height + ", top=" + top + ", left=" + left);
        return false;
      });
      $(this).find('a.popn-socialbutton-count').mouseenter(function() {
        return $(this).css({
          color: exOptions.countColor.textHover,
          backgroundColor: exOptions.countColor.bgHover
        });
      }).mouseleave(function() {
        return $(this).css({
          color: exOptions.countColor.text,
          backgroundColor: exOptions.countColor.bg
        });
      });
      return $(this).find('.popn-socialbutton-wrap').mouseenter(function() {
        return $(this).stop().animate({
          marginTop: 0
        }, 100, 'swing');
      }).mouseleave(function() {
        return $(this).stop().animate({
          marginTop: 4
        }, 100, 'swing');
      });
    };
  })(jQuery);

}).call(this);
